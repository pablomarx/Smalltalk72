;!!!!FILE MAINTENANCE ---- AINTR.SR

	.TITL	AINTER

.GETNOLIST "SMALL.OPS"
.GETNOLIST "ASMALL.PARMS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "PAGE1.PARMS"
.GETNOLIST "ANIM.OPS"
.GETNOLIST "ANIM.PARMS"
.GETNOLIST "ANIM.SYMS"

;	.ENT	INTR,SHINT,RESUM,SHRES,ON,OFF,PAUSE,P1
;	.EXTN	DOMOUS,TEST,TICMASK,WW,RUNNG
;	.EXTD	D3


.ZREL			;!!!!CULLED FROM AZREL
.SHINT:	SHINT
.SHRES:	SHRES

.SREL
INTR:	INTRC		;!!!!IF THE .ENT IS TO BE BELIEVED
RESUM:	RESUMC
ON:	ONC
OFF:	OFFC
PAUSE:	PAUSEC
P1:	P1C


FIXINTRTABS: FIXINTRTABSC	;!!!!FOR MAKING NREL TABLES OF
				;!!!!PRTS CORRECT -- CALLED AT
				;!!!!DINIT IN ADISP.SR



	.NREL
	.RDX	8


;***** C A L L I N G   S E Q U E N C E  ****
;*	STA	3,.+2+SAV3	*	SAV3= 8
;*	JSR	(S)INTR		*
;*	JSR	(S)RESUME		*
;*	<START>			*	STARTING ADDRESS
;*	<HIGHER> e.g. 0777		*	MASK FOR ACTIVE
;*	.BLK	8		*
;*				*
;*<START>:	...		*	RETURN IN AC3
;*		...		*
;*	JMP	0,3		*
;**** **** **** **** **** **** **** **

		;FIELDS OF STATE RECORD:

START	=1
NP	=2		;FOR TIME SHARING
HIGHER	=2		;FOR PRIORITY INTERUPTS
SAVPC	=3
PP	=4		;FOR TIME SHARING
SAVACT	=4		;FOR PRIORITY INTERUPTS
SAV0	=5
SAV1	=6
SAV2	=7
SAV3	=10
SAVC	=11
SAVTP	=12

PAG1	=400		;!!!!SAME AS PAGE1 IN PAGE1.PARMS
;ACTIVE	=453		;!!!!IN PAGE1.PARMS
;PCLOC	=500		;!!!!IN PAGE1.PARMS
PCTRAP	=527		;!!!!SAME AS TRAPPC IN PAGE1.PARMS
;DIR	=61000		;!!!!IN THE ASSEMBLER
;EIR	=61001		;!!!!IN THE ASSEMBLER
;BRI	=61002		;!!!!IN THE ASSEMBLER


	.RDX	8

TEMP0:		0	;!!!!
FXRET:		0	;!!!!
.TEST:		TEST	;!!!!

FIXINTRTABSC:		;!!!!SUBR TO GET SOME NREL ADDRESSES
			;!!!!INTO THE CODE AT P0, P1C AND P2
			;!!!!SUGGESTIONS FOR GREATER ELEGANCE
			;!!!!WILL BE LEAPT UPON
			;!!!!CALLED AT DINIT IN ADISP.SR
	STA 3,FXRET	;!!!!SAVE RETURN AND AC0
	STA 0,TEMP0
	JSR @.PNT	;!!!!DO SOME PNT'S AND SAVE THE RESULTS
	SWITCH-.	;!!!!IN THE DESIRED PLACES
	STA 0,P0SWITCH
	STA 0,P1SWITCH
	STA 0,P2SWITCH
	JSR @.PNT
	P1C-.
	STA 0,P0P1
	STA 0,P2P1
	JSR @.PNT
	ANULL-.
	STA 0,P0NULL
	STA 0,P1NULL
	JSR @.PNT
	P2-.
	STA 0,P0P2
	STA 0,P1P2
	JSR @.PNT
	P0-.
	STA 0,P1P0
	STA 0,P2P0
	LDA 0,@.TEST	;!!!!TEST IS EXTERNAL
	STA 0,P2TEST
	LDA 0,TEMP0	;!!!!GET AC0 BACK
	JMP @FXRET	;!!!!HERE ENDETH THIS ICKY SUBR



	
INTRC:
	STA	0,SAV0,VIA3
	STA	1,SAV1,VIA3
	STA	2,SAV2,VIA3
	LDA	2,.PAG1
	LDA	0,PCLOC-PAG1,VIA2
	STA	0,SAVPC,VIA3
	LDA	0,PCTRAP-PAG1,VIA2
	STA	0,SAVTP,VIA3
	LDA	0,ACTIVE-PAG1,VIA2
	STA	0,SAVACT,VIA3
	LDA	1,HIGHER,VIA3
	AND	1,0
	STA	0,ACTIVE-PAG1,VIA2
	EIR
	SUBCL	0,0
	STA	0,SAVC,VIA3
	JMP	@START,VIA3



P0:
	STA	3,.+12
	JSR	SHINT
	JSR	SHRES
P0SWITCH:	0	;!!!!SWITCH
P0P1:		0	;!!!!P1
P0NULL:		0	;!!!!NULL
P0P2:		0	;!!!!P2
	.BLK	LENSTATE-2

P1C:
	STA	3,.+12
	JSR	SHINT
	JSR	SHRES
P1SWITCH:	0	;!!!!SWITCH
P1P2:		0	;!!!!P2
P1NULL:		0	;!!!!NULL
P1P0:		0	;!!!!P0
	.BLK	LENSTATE-2

P2:
	STA	3,.+12
	JSR	SHINT
	JSR	SHRES
P2SWITCH:	0	;!!!!SWITCH
P2P0:		0	;!!!!P0
P2TEST:		0	;!!!!TEST
P2P1:		0	;!!!!P1
	.BLK	LENSTATE-2


;P0:				;!!!!WHAT WAS HERE
;	STA	3,.+12
;	JSR	SHINT
;	JSR	SHRES
;	SWITCH
;	P1
;	NULL
;	P2
;	.BLK	LENSTATE-2

;P1C:
;	STA	3,.+12
;	JSR	SHINT
;	JSR	SHRES
;	SWITCH
;	P2
;	NULL
;	P0
;	.BLK	LENSTATE-2

;P2:
;	STA	3,.+12
;	JSR	SHINT
;	JSR	SHRES
;	SWITCH
;	P0
;	TEST
;	P1
;	.BLK	LENSTATE-2



.DOMOUS:	DOMOUS
.PAG1:		PAG1

.PCLOC:		PCLOC
.PCTRAP:	PCTRAP


SHINT:
	STA	0,SAV0,VIA3
	STA	1,SAV1,VIA3
	STA	2,SAV2,VIA3
	SUBCL	0,0
	STA	0,SAVC,VIA3
	JMP	@START,VIA3

RESUMC:
	LDA	0,SAVC-1,VIA3
	MOVR	0,0
	LDA	1,SAV1-1,VIA3
	LDA	2,.PAG1
	LDA	0,SAVPC-1,VIA3
	DIR
	STA	0,PCLOC-PAG1,VIA2
	LDA	0,SAVTP-1,VIA3
	STA	0,PCTRAP-PAG1,VIA2
	LDA	0,SAVACT-1,VIA3
	STA	0,ACTIVE-PAG1,VIA2
	LDA	0,SAV0-1,VIA3
	LDA	2,SAV2-1,VIA3
	LDA	3,SAV3-1,VIA3
	BRI

ONC:
	DIR
	STA	3,ONRET
	LDA	3,@.RUNNG
	LDA	0,NP+2,VIA3
	STA	2,NP+2,VIA3
	STA	0,NP+2,VIA2
	STA	3,PP+2,VIA2
	MOV	0,3
	STA	2,PP+2,VIA3
	LDA	1,.TICMASK
	LDA	0,@.WW
	AND	1,0
	ADC	1,0
	STA	0,@.WW
	JMP	@ONRET

.RUNNG:		RUNNG
.TICMASK:	TICMASK
.WW:		WW
ONRET:		.-.

ANULL:				;!!!!HAD TO MAKE ANULL--ST OWNS NULL
	JSR	.+1
PAUSEC:
	LDA	1,.TICMASK
	DIR
	LDA	0,@.WW
	AND	1,0
	ADC	1,0
	STA	0,@.WW
	EIR
	JMP	0,3

OFFC:
	LDA	2,@.RUNNG
	STA	2,0,VIA3
	INC	3,3
	DIR
	STA	3,@.PCLOC
	LDA	3,PP+2,VIA2
	LDA	0,NP+2,VIA2
	STA	0,NP+2,VIA3	;SELF.PP.NP _ SELF.NP
	MOV	3,1
	MOV	0,3
	STA	1,PP+2,VIA3	;SELF.NP.PP _ SELF.PP

SWITCH:
	JSRII	.DOMOUS
	LDA	0,@.PCLOC	;!!!!GET INTERRUPT PC
	LDA	3,@.RUNNG	;!!!!GET CURRENT PROCESS
	STA	0,SAVPC+2,3	;!!!!SAVE PC IN CURRENT'S TABLE
	LDA	3,NP+2,VIA3	;!!!!GET PTR TO NEXT PROCESS
	LDA	0,SAVPC+2,3	;!!!!GET IT'S INTERRUPT PC
	STA	0,@.PCLOC	;!!!!INSTALL IT
	STA	3,@.RUNNG	;!!!!ESTABLISH SELF AS PROCESS
	LDA	0,D3		;!!!!PROCEED WITH RESTORE OF STATE
	ADD	0,3

SHRES:	LDA	0,SAVC-1,VIA3
	MOVR	0,0
	LDA	0,SAV0-1,VIA3
	LDA	1,SAV1-1,VIA3
	LDA	2,SAV2-1,VIA3
	LDA	3,SAV3-1,VIA3
	BRI

	.END
