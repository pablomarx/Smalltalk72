	.TITL	FPCLAS
	.GETNOLIST	"SMALL.SYMS"
	.GETNOLIST	"SMALL.OPS"
	.GETNOLIST	"SMALL.PARMS"
	.SREL
FPCOD:	FPCODC
	.NREL
	-1	;!
;
;	/* FLOATING-POINT CLASS */
FPCODC:	LDA	0,VALUE
	JSR	@.IVAL
	JSR	.+1;(SET AC3)
	ADD	0,3
	JMP	2,3	;DISPATCH ON VALUE PRECEDING CODE ESCAPE
	JMP	ISNW	;0 CODE 42
	JMP	IPART	;1 CODE 42
	JMP	FPART	;2 CODE 42
;
ISNW:	LDAF	INST	;isnew?
	SNL	0,0
	JMP	OPS
	JSR	@.FECH
	JSR	@.IVAL
	MOV	0,1	;(!float :)
	ZER	0,0
	JSRII	.FLDI
FRTN:	ZER	0,0	;RETURN CONTENTS OF F.AC0
	JSRII	.FST
	JSR	@.SVLI
	JSR	@.ARET
;
OPS:	LDA	0,.QPER
	JSR	@.PEEK
	JSRII	.RSELF	;PASSIVE RETURN IF  .
	SNN	0,0
	JSRII	.RSELF	;OR  )
	JSR	@.INDX
	X1-.-1
	QPLUS	;+
	QHYPH	;-
	QSTAR	;*
	QSLAS	;/
;	COMPARE MASK:	> = <
	QLESS	;<	0 0 1
	QEQ	;=	0 1 0
	QLEQ	;<=	0 1 1
	QGRTR	;>	1 0 0
	QNEQ	;#	1 0 1
	QGEQ	;>=	1 1 0
X1:	SNN	2,2
	JMP	@.EVAL	;OUT TO SMALLTALK IF NOT KNOWN
	MOV	2,0
	JSR	@.INTN
	STAF	ARG0	;SAVE OP INDEX FOR REENTRANCY
	JSR	@.AMPC	;GOBBLE OP
	JSR	@.FECH	;GET ARG
	LDA	1,EMPTY	;CHECK FOR FALSE
	SNE	0,1
	 JSR	FALSARG
	JSR	@.ISIT	;CHECK THAT IT FLOATS
	FPCLAS
	JSR	IARG	;NO - SO ARG _ F.AC1 _ FLOAT(ARG)
	STA	0,ARGT
	JSR	LSELF	;F.AC0 _ SELF
	LDAF	ARG0
	JSR	@.IVAL	;RESTORE INDEX
	STA	0,IXT
	JSR	.+1
SET3:	ADD	0,3
	LDA	3,OPTB-SET3,3	;FIND <OP> FROM INDEX
	LDA	1,ARGT	;LOAD ARG
	ZER	0,0
	JSR	@0,3	;F.AC0 _ SELF <OP> ARG
	LDA	1,IXT
	LDA	2,C3
	SGT	1,2	;CHECK FOR COMPARISONS
	 JMP	FRTN	; NO, RESULT IS IN F.AC0
	SUB	2,1	; YES, AC1_ COMPARISON MASK
	INCZL	0,0	;MAP BOB'S 1,0,-1 INTO 1,2,4 !!
	AND	0,1	;CHECK THAT CODE
	SEQ	0,1	;AGAINST COMPARISON MASK
	 JMP	@.FALS	;NO, RETURN FALSE
	JSRII	.RSELF	;YES, RETURN SELF
.RSELF:	RSELF
ARGT:	0
IXT:	0
;
IPART:	JSR	LSELF	;F.AC0 _ SELF
	JSRII	.FTR	;TRUNCATE
	JSR	@.INTN
	JSR	@.SVLI	;RETURN INTEGER
	JMP	@.ARET
;
FPART:	JSR	LSELF	;F.AC0 _ SELF
	JSRII	.FTR
	MOV	0,1
	ONE	0,0
	JSRII	.FLDI	;F.AC1 _ IPART
	ZER	0,0
	ONE	1,1
	JSRII	.FSB
	JMP	FRTN	;RETURN DIFFERENCE
;
LSELF:	STA	3,T3	;LOAD SELF INTO F.AC0
	LDAF	INST
	MOV	0,1
	ZER	0,0
	JSRII	.FLD
	JMP	@T3	;LEAVES ZERO IN AC0
T3:	0
;
IARG:	STA	3,T3
	JSR	@.IVAL	;GET INTEG ARG
	MOV	0,1
	ONE	0,0	;INTO F.AC1
	JSRII	.FLDI
	JMP	@T3	;AC0 INDICATES F.AC1 IS ARG
.FLDI:	FLDI
.FTR:	FTR
.FLD:	FLD
.FST:	FST
;
OPTB:	FAD
.FSB:	FSB
	FML
	FDV
	FCM
	FCM
	FCM
	FCM
	FCM
	FCM
;
FALSARG:	LDAF	ARG0	;COME HERE WHEN OPERAND IS FALSE
	JSR	@.IVAL
	LDA	1,C3
	SLE	0,1	;CHECK THAT OP WAS COMPARE
	 JMP	@.ERET	;YEP, PASS FALSE BACK (ITS STILL IN VALUE)
	LDA	0,VALUE
	JMP	0,3	;NOPE; BACK IN-LINE THEN BOMB AT IVAL
	.END
