
;//FILE MAINTENANCE --  CKSTF.SR
;//CHCKNG SBRTNS CALLED FROM MAZUR--SUBROUTINIZED SO THE EFFECTS OF
;//CHKNG FOR CERTAIN CHARS MAY VARY WITHOUT INHIBITING THE 
;//GENERALITY OF THE MEASURE ROUTINE
;//CRCHK--CHCKS IF CHAR CR RETRN  -- STRING PICK TERMINATED IF SO
;//DOSPC--CHCKS IF CHAR A SPC -- SAVE A BYTE PTR AND X VALU IF SO
;//CKSPC--CHCKS TO SEE IF THERE WAS A SPC IN THE LINE. IF THERE WAS
	;//PUTS IT'S X IN AC2 AND ITS BYTE PTR IN AC1
	;//INCS NSPC FOR EACH SPACE IN LINE -- USED IN JSTFYING

.TITL CKSTF
.GETNOLIST "SMALL.OPS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "SMDISP.SYMS"

.SREL
CRCHK:	CRCHKC
DOSPC:	DOSPCC
CKSPC:	CKSPCC
NSPC:	0
NSPC2:	0
TLCHR:	0
LSTSP:	0
LSTC:	0

.NREL

-1
.CHR:	CHR		;//USED IN SPCFX ROUTINE
.LSTSP:	LSTSP		;//PLACE FOR BYTE PTR TO LAST SPACE
.LSTC:	LSTC		;//LST CHR SWCH--HLP GT OVRFLO SPC IN LINE
.NSPC:	NSPC		;//USED FOR SPACE CNTING--FOR JSTFYING
.NSPC2:	NSPC2
.TLCHR:	TLCHR

.GTWD:	GETWD

SPACE:	40		;//ASCII FOR SPACE CHARACTER
CR:	15		;//ASCII FOR CAR RETRN
QUOTE:	47		;//ASCII FOR SINGLE QUOTE
SPCX:	0		;//PLACE FOR X ASSOCIATED WITH LAST SPACE

CKRTN:	0		;//PLACE FOR RETURN ADDRESS

CRCHKC:
	STA 3,CKRTN	;//SAVE RETURN
	LDA 3,CR	;//CR CAUSES POP OUT FROM SMF IN MAZUR
	SEQ 0,3		;//AC0=CR,AC1=BYTE PTR TO CR IN STRING
			;//AC2 = RIGHT X OF CHR BEFORE CR
	ISZ CKRTN	;//NOSKP RTRN CAUSES JMP TO SKP RTRN
			;//TO SMF IN MAZUR
	JMP @CKRTN	;//SKP RETRN CAUSES MAZUR TO KEEP PICKING

SPCRT:	0		;//SPC NEEDS OWN RTRN SINCE CALLED BY CKSPC
DOSPCC:
	STA 3,SPCRT	;//SAVE RETURN
	LDA 3,SPACE	;//SEE IF CHAR A SPACE
	SNE 0,3
	JMP ITIS	;//IF NOT FIX TRAILING BLANKS COUNT
	ISZ @.TLCHR
	JMP @SPCRT	;//AND RETURN
ITIS:
	LDA 3,@.TLCHR	;//IF CHAR'S OTHER THAN SPACE HAVE 
	SGZ 3,3		;//HAPPENED SINCE LAST SPACE THEN RESTART
	JMP MULSP	;//TRAILING SPACES COUNT
	ZER 3,3		;//OTHERWISE KEEP COUNTING SPACES
	STA 3,@.TLCHR
	STA 3,@.NSPC2
MULSP:
	STA 2,SPCX	;//OTHERWISE SAVE X
	STA 1,@.LSTSP	;//AND BYTE PTR
	ISZ @.NSPC	;//INC JUSTIFY SPACE COUNTER
	ISZ @.NSPC2	;//INC TRAILING BLANKS COUNTER
	LDA 3,@.LSTC	;//SEE IF CALLED FROM CKPSC
	SGZ 3,3
	JMP @SPCRT	;//IF NOT RETURN FOR MORE CHARS
	JSRII .GTWD	;//IF SPACE IS LAST CHAR THE RIGHT X
	ADDZ 0,2	;//WILL BE A SPACE WIDTH > FRRT OR WNRT
	STA 2,SPCX
	LDA 0,SPACE	;//AND GET RIGHT ASCII VALUE IN AC0
	JMP @SPCRT	;//AND RETURN

CKSPCC:
	STA 3,CKRTN	;//SAVE RETURN
	ISZ @.LSTC	;//SET LAST CHAR SWITCH--CHECKED IN DOSPC
	JSR DOSPCC	;//SEE IF THE LAST CHAR A SPACE
			;//INCLUDE IN LINE IF SO
	ZER 3,3		;//REFRESH SWITCH
	STA 3,@.LSTC
	LDA 3,@.LSTSP	;//CHECK FOR SPACE IN LINE
	SP 3,3		;//STARTS NIL IN MAZUR--POSITIVE IS A SPC
	JMP @CKRTN	;//NO SPC MEANS AC'S LEFT AT OVERFLOW STATE
	LDA 2,SPCX	;//OTHERWISE AC2 GET RIGHT X OF LAST SPACE
	LDA 1,@.LSTSP	;//AND AC1 GET BYTE PTR TO THAT SPACE
	INC 1,1		;//INC'D BY ONE SINCE SPC TO BE SCANNED IN
	JMP @CKRTN

.ENDN
