
;//FILE MAINTENANCE --     UPDAT.SR
;//UPDATING FIXES UP REPLY, CHAR Y, CHAR X AND OTHER STUFF
;//ALSO CHECKS TO SEE IF CURRENT CALL WAS WITH A BACK SPACE.
;//IF SO, THE CLEARING OF ANOTHER LINE MAY BE REQUIRED.
;//THE FOLLOWING VALUES FOR REPLY MEAN:
	;//0 -- REQUESTED ACTION TOOK PLACE AND CAUSED NO CHANGES
	;//4 -- FRAME HEIGHT INCREASED
	;//5 -- BOTTOM OF WINDOW ENCOUNTERED
	;//6 -- BOTH  11 AND 12 ARE TRUE

;//WILL PROBLY BE MODIFIED WHEN IT IS MORE CLEAR EXACTLY WHAT IS
;//NEEDED TO CONTROL DISPLAY ROUTINES.

.TITL UPDAT

.GETNOLIST "SMALL.OPS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "SMDISP.SYMS"

.SREL
UPDAT:	UPDATC
HITSW:	0
WNOVR:	0

.NREL

-1
.LLBD:	LLBD		;//EXTERNAL ADDRESSES
.MAZX:	MAZX
.OUTY:	OUTY
.FRHT:	FRHT
.RPLY:	RPLY
.MODE:	MOOD
.MARK:	MARK
.LAST:	LAST
.BKSP:	BKSPC
.SVFNT:	SVFNT

.HITSW:	HITSW
.WNOVR:	WNOVR
BACKS:	10

.RDX 10
HTCHG:	4		;//RETURN VALUES
WINOV:	5
BTHCG:	6
.RDX 8

UPDATC:
	LDA 0,BACKS	;//CHECK FOR NEED TO CLEAR ANOTHER LINE
	LDA 1,@.MODE	;//WHEN BACKSPACING HAS CAUSED WRAPPING
	SNE 0,1		;//UP TO PRCDNG LN & LFT GARBAGE BEHIND
	JSRII .BKSP

	LDA 0,@.HITSW	;//SEE IF HTH CHNGD OR OFF BTM OF WNDO
	LDA 1,@.WNOVR
	ADDZ 0,1 SZR
	JSR CHGCK	;//FIX RPLY IF SO--SKP FH CHNG IF
			;//WIN BOT ONLY TAPPED
	STA 0,@.RPLY	;//OTHERWISE REPLY SHOULD BE ZERO

	LDA 0,@.FRHT	;//IF FRM HT CHANGED SAVE IN INSTANCE
	JSR @.SINS
	FH

	LDA 0,@.LLBD	;//LAST LINE BEGNG BYTE PTR
			;//TO MAKE CALL FROM DOCHR GOOD
	JSR @.SINS
	LL

	LDA 0,@.RPLY	;//DO REPLY
	JSR @.SINS
	RP

	LDA 0,@.OUTY	;//UPDATE CHARY--OUTY SHOULD HAVE
			;//VALUE OF LAST GOOD Y
	JSR @.SINS	;//I.E., INTERSECTION Y OF LAST GOOD LINE
	CY

	LDA 0,@.MAZX	;//UPDATE CHAR X
	JSR @.SINS
	CX

	LDA 0,@.MARK	;//UPDATE MARK
	JSR @.SINS
	MK
	LDA 0,@.LAST	;//UPDATE LAST
	JSR @.SINS
	LS

	LDA 0,@.SVFNT	;//REFRESH FONT PRT IN CASE SPECIAL
	STA 0,.FONT	;//FONT USED THIS TIME THROUGH


	JMP @.ERET

CHGCK:
	SOD 1,1 	;//IF SUM IS ODD THEN ONLY ONE SWCH SET
	JMP BOTH	;//OTHERWISE BOTH SET
	SGZ 0,0		;//IF NOT FRAME HEIGHT CHANGE
	JMP OVRWN	;//THEN OFF BOTTOM OF WINDOW
	LDA 0,HTCHG	;//GET RETURN VALUE
	STA 0,@.RPLY
	JMP 1,3		;//RETURN TO CONTINUE UPDATING
BOTH:
	LDA 0,BTHCG	;//GET RPLY VALU FOR BOTH WINDOW OVRFLO
	STA 0,@.RPLY	;//AND CHANGE OF FRAME HEIGHT
	JMP 1,3		;//AND CONTINUE WITH UPDATING
OVRWN:
	LDA 0,WINOV	;//GET REPLY VALUE FOR WINDOW OVERFLOW ONLY
	STA 0,@.RPLY
	JMP 1,3		;//GO BACK TO FINISH UPDAT

.END
