
;//FILE MAINTENANCE --  CLREM.SR
;//UTIL CALLED BY BLOCK MOVING ROUTINE TO CLR NON-INTRSCTNG SRC
;//MATERIAL FROM SCREEN AFTER A BLOCK TRANSFER, WHEN REQUESTED.
;//CALL EXPECTS PTRS TO TWO X W Y H TABLES (SRC AND DEST)
;//HENCE,
;//	JSRII .CLRM
;//	SRCTB
;//	DESTB
;//	JMP CONTINUE . . .
;//WHEN THERE IS NO INTRSCTN BETWEEN THE SRC AND DEST AREAS,
;//THE SOURCE AREA IS SIMPLY CLEARED. OTHERWISE--
;//SY=DY?()(SY<DY?(CLEAR SX SW SY (DY-SY))
;//		(CLEAR SX SW (D BOT) (SB-DB))
;//SX=DX(DONE)(SX<DX?(CLEAR SX (DX-SX) SY SH)
;//		(CLEAR (D RIGHT) (S RIGHT - D RIGHT) SY SH

.TITL CLREM
.GETNOLIST "SMALL.OPS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "SMDISP.SYMS"
.SREL
CLREM:	CLREMC
GRBGX:	0		;//TABLE USED FOR CALLING CLEAR ROUTINE
GRBGW:	0
GRBGY:	0
GRBGH:	0
GRBGV:	0


.NREL

-1
.CLER:	CLEAR
.INSC:	INSEC
.COPY:	COPY
.GRBGX:	GRBGX
.GRBGW:	GRBGW
.GRBGY:	GRBGY
.GRBGH:	GRBGH
RETRN:	0

CLREMC:
	STA 3,RETRN
	LDA 0,1,3	;//SQUIRREL AWAY TABLE PTRS
	STA 0,.DES
	LDA 0,0,3
	STA 0,.SRC

	JSRII .INSC	;//SEE IF SRC AND DEST INTRSCT AT ALL
.SRC:	0
.DES:	0
	GRBGX
	JMP SONLY	;//NO INSECTN?(CLR ENTIRE SOURCE AREA)

	LDA 3,.SRC	;//OTHERWISE CLEAR ACROSS TOP OR BOTTOM
	LDA 2,.DES
	LDA 0,2,3	;//IF Y'S EQUAL WORK ON RT OR LEFT SIDE
	LDA 1,2,2
	SNE 0,1
	JMP DOSID

	LDA 2,0,3	;//SOURCE X AND SOURCE WIDTH ALWAYS GOOD 
	STA 2,@.GRBGX	;//FOR THE TOP AND BOTTOM CLEAR
	LDA 2,1,3	
	STA 2,@.GRBGW
	
	SLT 0,1		;//SY < DY ?(CLEAR SX SW SY (DY-SY))
	JMP CRSBT	;//(CLEAR SX SW (D BOT) (S BOT-D BOT)

	STA 0,@.GRBGY
	SUBZ 0,1
	STA 1,@.GRBGH
	JSRII .CLER
	GRBGX
	JMP DOSID
CRSBT:
	LDA 2,3,3	;//SY + SH = S BOT
	ADDZ 0,2
	LDA 3,.DES	;//DY + DH = D BOT
	LDA 0,2,3
	LDA 1,3,3
	ADDZ 0,1
	STA 1,@.GRBGY	;//D BOT EQUALS CLEAR Y
	SUBZ 1,2	;//S BOT - D BOT = CLEAR H
	STA 2,@.GRBGH
	JSRII .CLER
	GRBGX

DOSID:
	LDA 3,.SRC	;//NOW WORK ON SIDE PORTIONS
	LDA 2,.DES
	LDA 0,0,3	;//SX = DX ?(DONE)
	LDA 1,0,2
	SNE 0,1
	JMP DONE
	LDA 2,2,3	;//SY AND SH GOOD FOR EITHER SIDE
	STA 2,@.GRBGY
	LDA 2,3,3
	STA 2,@.GRBGH
	SLT 0,1		;//SX < DX ?(CLEAR SX (DX-SX) SY SH)
	JMP DWNRT	;//(CLR (D RT) (S RT - D RT) SY SH)

	STA 0,@.GRBGX	;//SX GOOD WHEN LESS THAN DX
	SUBZ 0,1	;//DX-SX = CLEAR W
	STA 1,@.GRBGW
	JSRII .CLER
	GRBGX
	JMP DONE
DWNRT:
	LDA 2,1,3	;//SX + SW = S RIGHT
	ADDZ 0,2
	LDA 3,.DES	;//DX + DW = D RIGHT
	LDA 0,0,3
	LDA 1,1,3
	ADDZ 0,1
	STA 1,@.GRBGX	;//D RIGHT IS CLEAR X
	SUBZ 1,2	;//S RIGHT - D RIGHT = CLEAR W
	STA 2,@.GRBGW
	JSRII .CLER
	GRBGX
DONE:
	LDA 3,RETRN	;//RETURN +2
	JMP 2,3

SONLY:
	LDA 0,.SRC	;//WHEN NO INTERSECTION SIMPLY CLEAR SOURCE
	STA 0,.SRC2	;//AND RETURN
	STA 0,.SRC3
	JSRII .COPY
.SRC2:	0
.SRC3:	0
	GRBGX
	JMP DONE	;//NO INSEC -- SHOULDN'T HAPPEN

	JSRII .CLER
	GRBGX

	JMP DONE
.END
