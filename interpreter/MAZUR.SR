

;//FILE MAINTENANCE --     NMAZUR.SR
;//ROUTINE FOR MEASURING THE NUMBER OF CHARACTERS THAT WILL FIT
;//ON A LINE, GIVEN A STARTING X AND LINE WIDTH
;//IN:
	;//AC0 = LINE WIDTH
	;//AC1 = SUBSTRING TABLE PTR
		;//STRING PTR
		;//LEFT BOUNDARY
		;//RIGHT BOUNDARY
	;//AC2 = STARTING X
;//OUT:
	;//AC0 = OVERFLOW CHAR
	;//AC1 = SUBSCRIPT OF OVERFLOW CHAR
	;//AC2 = RIGHT X OF LAST GOOD CHAR

.TITL MAZUR

.GETNOLIST  "SMALL.OPS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "SMDISP.SYMS"

.SREL
MAZUR:	MAZURC
JSTCR:	0

.NREL

-1
.MGWD:	GETWD		;//ADDRESS OF GET CHAR WIDTH ROUTINE
.CRCK:	CRCHK		;//ADDRESS OF CAR RETRN CHECK ROUTINE
.DOSP:	DOSPC		;//ADDRESS OF SPACE FIXUP ROUTINE
.CKSP:	CKSPC		;//AD OF RTN FOR CHECKING IF SPCS IN LINE

RETRN:	0		;//RETURN ADDRESS
TEMP:	0		;//RETURN TO SMF
.LSSP:	LSTSP		;//PLACE TO SAVE PTRS TO LST SPC IN LINE
.NSPC:	NSPC		;//SPACE CNTR FOR JUSTIFYING
.TLCHR:	TLCHR		;//ANOTHER JUSTIFYING SWITCH
.JSTCR:	JSTCR		;//AD OF JUSTIFY'S CR SWITCH
SVCHR:	0		;//PLACE TO SAVE CHAR CODE
LNRT:	0		;//PLACE TO SAVE LINE RIGHT MARGIN PARAM

MAZURC:
	STA 3,RETRN	;//SAVE RETURN
	STA 0,LNRT	;//SAVE LINE RIGHT MARGIN PARAM
	NIL 0,0		;//SET UP FOR CHCKNG IF A SPC IN THE LINE
	STA 0,@.LSSP	;//IF LAST SPC VALUE STAYS NIL -- NO SPC
	ZER 0,0		;//INIT SPACE CNTR FOR JUSTIFYING
	STA 0,@.NSPC
	STA 0,@.TLCHR	;//AND ANOTHER SWITCH FOR JUSTIFYING
	STA 0,@.JSTCR	;//AND ANOTHER

	JSR @.PNT	;//SET FOR CALL ON SMF--AC0=SUBR PTR
	HUNT-.
	JSR @.SMF	;//AC1 = PTR TO SUBSTRING TABEL (MZTBL)
	1
	INC 1,1 SKP	;//AC2 TRNSPRNT--NOSKP RTN --
			;//SBSTG EXHAUSTED
	JMP @RETRN	;//SKIP MEANS SKIP RTRN FROM SUBR CALLED
			;//BY SMF (STRING-MAP-FETCH)
			;//SMF CALLS IT'S  SBRTN WITH CHAR CODE
			;//IN AC0 AND CURRENT BYTE PTR IN AC1
	NIL 0,0		;//WHEN SUBSTRING EXHAUSTED RTRN AC0 NIL
	STA 0,@.NSPC	;//WHEN SUBSTRING EXHAUSTED NO JUSTIFY
			;//ON THAT LINE
	JMP @RETRN	;//TO DISTINGUISH FROM LEGAL 8-BIT CODE


HUNT:
	STA 3,TEMP	;//SAVE RETURN FROM CALL BY SMF
	JSRII .CRCK	;//CHECK IF CARRAIAGE RETURN
	JMP JSTFIX	;//IF SO, POP OUT OF MAZUR
			;//AFTER FIXUP FOR JUSTIFYING

	STA 0,SVCHR	;//SAVE CHAR -- GTWD RETURNS WIDTH IN AC0
	JSRII .MGWD
	ADDZ 0,2	;//ADD WDTH TO CURRENT X
			;//(I.E. STARTING X IN AC2)
	LDA 3,LNRT	;//CHECK FOR OVERFLOW
	SLE 2,3
	JMP OVFLO

	LDA 0,SVCHR	;//SEE IF CHAR A SPACE
	JSRII .DOSP	;//DO FIXUP IN SUBROUTINE
	JMP @TEMP	;//GET NEXT CHAR
OVFLO:
	SUBZ 0,2	;//BACK X OFF TO LAST GOOD RIGHT X
	LDA 0,SVCHR	;//GET LAST CHAR IN AC0
	JSRII .CKSP	;//SUBROUTINE TO CHECK IF SPACES IN LINE
			;//AND INCLUDE SPACE AS LAST CHAR OF LINE
			;//IF IT CAUSED OVERFLOW

SKPRT:
	LDA 3,TEMP	;//COME TO HERE IF ONE OF CHCKS INDICATES
	JMP 1,3		;//TERMINATION OF STRING PICK

JSTFIX:
	STA 0,@.JSTCR	;//SQUIRREL AWAY CR CODE FOR CHECKING IN
	JMP SKPRT	;//JUSTIFY MODE

.END
  