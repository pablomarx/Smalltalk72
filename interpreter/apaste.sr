;!!!!FILE MAINTENANCE --  APASTE.SR

;!!!!CONVERTED TO COMPATIBILITY WITH ALTO ASSEMBLER--LOADER BY
;!!!!D. MERRY AND FRIENDS CIRCA 8/75



	.titl	APASTE

.GETNOLIST "SMALL.OPS"
.GETNOLIST "ASMALL.PARMS"
.GETNOLIST "SMALL.SYMS"
.GETNOLIST "PAGE1.PARMS"
.GETNOLIST "ANIM.OPS"
.GETNOLIST "ANIM.PARMS"
.GETNOLIST "ANIM.SYMS"

.SREL
pst:	pstc		;!!!!ENTRY



inhb1:	0		;!!!!addressing prob labels
width:	0
bxptr:	0
oby:	0
pos1:	0
cctr:	0
yinc:	0
lxinh:	0
rxinh:	0
tyinh:	0
rctr:	0
byinh:	0
bfwd:	100
bfwd4:	400

clp:	clpc			;!!!!addressing prob ads
akbx:	kbx
ainhb:	.inhb


fixpastetabs:	fixpastetabsc	;!!!!entry to the subr that
				;!!!!makes nrel ad tables correct
				;!!!!called at dinit in adisp.sr




;	.ent	pst,mult
;	.extn	GLUE,xctr,yctr,wxmin,wxmax,wymin,wymax,bfptr
	.rdx	8 


	.zrel
				;first box at .+disp+1
;.xp:	xctr			;!!!!ALREADY LABELS IN ZREL--DON'T
;.yp:	yctr			;!!!!NEED INDIRECTION -- I HOPE
;.x1:	wxmin			;!!!!SINCE IT INHIBITS ASSEMBLY
;.x2:	wxmax			;!!!!HENCE xctr SUBSTITUTED FOR
;.y1:	wymin			;!!!!@.xp, ETC
;.y2:	wymax

bflx:	-40			;nibbles left of origin in buffer
bfrx:	40			;right
bfty:	40			;above
bfby:	-40			;below
done:	0			;subroutine return address stored here 
.ret:	0 			;used for subroutine calls
.ret1:	0			;used for subroutine calls
.mult:	mult			;!!!!PROBABLY AND ENTRY
 


	.nrel	
-1			;!!!!SCREW THE ASSEMBLER


.kbx:	akbx		;!!!!have to go thru srel
posit:	.-.		;address of current word in buffer
inhib:	.-.		;used to inhibit pasting outside of 
			;window-bit=0 to inhibit
inh1:	inhb1		;!!!!I THINK OBSOLETE BUT LEAVE IN CASE
clpst:	jmp	@.clp	;invisible at sign 
			;!!!!I THINK OBSOLETE BUT LEAVE IN CASE
			;!!!!if not, will have to be fixed probably

.clp:	clp		;points to clp routine
			;!!!!I THINK OBSOLETE BUT LEAVE IN CASE
cct:	.-.		;column count within box
rct:	.-.		;row count within box
.nhdr:	.-.		;points to current header word
.pic:	.-.		;points to current object picture word
n4:	4 
n3:	3 
n1:	1 
n128:	200 
trc11:	13	;code for transparent nibble or box (not nib but box)
  
	.nrel
  
mult:
	sta	3,.ret	;AC1:=AC0+AC1*AC2
	subl#	1,2,snc
	jmp	.+4
	mov	2,3
	mov	1,2
	mov	3,1
	sub	3,3
tbit:
	movzr	1,1,szc 
	add	2,3
	movzl	2,2,szr
	mov#	1,1,snr 
	jmp	.add 
	jmp	tbit 
.add:
	mov	3,1 
	add	0,1
	jmp	@.ret



clpc:
	sta	3,.ret 
	lda	2,@.bxptr	;!!!!put label in srel
	lda	0,0,2
	movl#	0,0,szc
	jmp	neggg
	lda	1,n128 		;if boxlabel<128 then  const. box
	subl#	1,0,szc
	jmp	knib 
	sub	1,0
neggg:
	add	2,0
	sta	0,.box 
	lda	1,@.inhb1	;!!!!put label in srel
	lda	2,@apos1		;!!!!in srel
	lda	3,@.width	;!!!!in srel
	GLUE			;call glue
	jmp	clinc


.box:		.-.		;pointer to 1st header word
.inhb1:		inhb1		;inhibit word
				;!!!!put in srel
apos1:		pos1		;core address of position in buffer
				;!!!!label put in srel
.width:		width		;with of buffer in nibbles
				;!!!!put in srel

knib:
	lda	1,trc11		;check for transparent
	sub#	1,0,snr		;trc11=code for trans
	jmp	clinc
	mov	0,0,snr		;check for zero which means
				;transparent too
	jmp	clinc
	subl#	0,1,szc		;kluge until asci is figured out
	jmp	clinc		;assume transparent if 
				;code>transcode
	lda	3,@.kbx	 	;not trans 
				;!!!!have to go thru srel
	add	0,3		;.kbx points to kbx dispatch table
	lda	0,0,3		;AC1 contains pointer to header
	sta	0,.box 
	lda	1,@.inhb1	;!!!!label in srel
	lda	2,@apos1		;!!!!label in srel
	lda	3,@.width	;!!!!label in srel
	GLUE			;call glue
	jmp	clinc

clinc:
	isz	@.bxptr		;!!!!put label in srel
	jmp	.+1
	lda	1,n4 
	lda	2,@apos1		;!!!!label in srel
	add	1,2
	sta	2,@apos1		;!!!!label in srel
	jmp	@.ret



  
;*** p a s t e    e n t r y  ****
; ac0 = pic ptr
d10:	12

pstc:
	sta	3,done		;return to subroutine call
	sta	0,.obpt

rdhdr:
	lda	3,.obpt		;.obpt points to object file 
	lda	0,4,3
	sta	0,xmin 
	lda	0,5,3
	sta	0,xmax 
	lda	0,6,3
	sta	0,ymin 
	lda	0,7,3
	sta	0,ymax 
	lda	0,10,3
	sta	0,@ayinc		;!!!!label in srel
	lda	0,11,3		;disp
	sta	0,disp
	lda	1,d10
	add	1,3
	add	0,3
	sta	3,@.bxptr	;bxptr:=add(disp)+disp+1 
				;!!!!label in srel
obnds:
	lda	0,xctr		;find corners of (positioned) obj 
				;!!!!xctr in page0--replaced @.xp
	lda	1,yctr		;olx=xmin+xp
				;!!!!yctr in page0--replaced @.yp
	lda	2,xmin		;orx=xmax+xp
	lda	3,xmax		;oty=ymax+yp
	add	0,2		;oby=ymin+yp 
	sta	2,olx
	add	0,3
	sta	3,orx
	lda	2,ymin 
	lda	3,ymax 
	add	1,2
	sta	2,@aoby		;!!!!label in srel
	add	1,3
	sta	3,oty
	jmp	windl

.obpt:		.-.
xmin: 		.-.
xmax:		.-.
ymin:		.-.
ymax:		.-.
ayinc:		yinc		;!!!!label in srel
disp:		.-.		;used if boxes not contiguous	
				;with header
.bxptr:	bxptr			;address of next box label
				;!!!!label in srel

windl:
	lda	0,wxmin		;find left side of window 
				;!!!!wxmin in page0--replaced @.x1
	lda	1,bflx 
	subl#	1,0,szc		; =max(bflx,x1)
	jmp	.+3
	sta	0,flx
	jmp	.+2
	sta	1,flx
windr:
	lda	0,wxmax		; right side of window
				;!!!!wxmax in page0--replaced @.x2
	lda	1,bfrx 
	subl#	1,0,szc		; =min(bfrx,x2)
	jmp	.+3
	sta	1,frx
	jmp	.+2
	sta	0,frx
windt:
	lda	0,wymax		;top of window=min(bfty,y2) 
				;!!!!wymax in page0--replaced @.y2
	lda	1,bfty 
	subl#	1,0,szc
	jmp	.+3
	sta	1,fty
	jmp	.+2
	sta	0,fty
windb:
	lda	0,wymin		;bottom=max(bfby,y1)
				;!!!!wxmin in page0--replaced @.y1
	lda	1,bfby 
	subl#	1,0,szc
	jmp	.+3
	sta	0,fby
	jmp	.+2
	sta	1,fby
horch:
	lda	0,orx		; horiz intrsctn of obj,window?
	lda	1,flx		;done if no
	subl#	0,1,snc
	jmp	@done 
	lda	2,olx
	lda	3,frx
	subl#	3,2,snc
	jmp	@done 
overl:
	subl#	2,1,szc		;obj extends left of window? 
	jmp	.+3
	sta	1,plx
	jmp	.+2
	sta	2,plx
overr:
	subl#	3,0,szc		;right? 
	jmp	.+3
	sta	3,prx
	jmp	.+2
	sta	0,prx
verch:
	lda	0,@aoby		;vert intsctn? 
				;!!!!label in srel
	lda	1,fty
	subl#	1,0,snc
	jmp	@done 
	lda	2,oty
	lda	3,fby
	subl#	2,3,snc
	jmp	@done 
overt:
	subl#	2,1,szc		;obj extends above window? 
	jmp	.+3
	sta	2,pty
	jmp	.+2
	sta	1,pty
overb:
	subl#	3,0,szc		;below?
	jmp	.+3
	sta	0,pby
	jmp	.+2
	sta	3,pby
	jmp	clclc

.bflx:	bflx
.bfrx:	bfrx
.bfty:	bfty
.bfby:	bfby
olx:	.-.			;leftmost nibble of obj at
				;current xp disp
orx:	.-.			;rightmost
aoby:	oby			;bottom
				;!!!!label put in srel
oty:	.-.			;top
flx:	.-.			;left of window=max x1,bflx
frx:	.-.			;right=min x2,bfrx
fty:	.-.			;top=min y2,bfty
fby:	.-.			;bottom=max y1,bfby
plx:	.-.			;leftmost nibble to get pasted
prx:	.-.
pty:	.-.
pby:	.-.


clclc:
	lda	0,plx		;find leftmost column pasted 
	lda	1,olx		;lcl=(plx-olx)/4 
	sub	1,0,szr
	movzr	0,0
	movzr	0,0
	sta	0,lcl
clcrc:
	lda	0,olx		;rightmost 
	lda	2,prx		;rcl=(prx-olx-1)/4 
	inc	0,0
	sub	0,2,szr
	movzr	2,2
	movzr	2,2
	sta	2,rcl
clctr:
	lda	0,pty		;top row 
	lda	1,oty		;trow=(oty-pty)/4
	sub	0,1,szr
	movzr	1,1
	movzr	1,1
	sta	1,trow 
clcbr:
	lda	2,pby		;bottom row
	lda	0,oty
	inc	2,2
	sub	2,0,szr		;brow=(oty-pby-1)/4
	movzr	0,0
	movzr	0,0
	sta	0,brow 
crctr:
	lda	0,rcl		;cctr=rcl-lcl    rctr=brow-trow
	lda	1,lcl
	sub	1,0
	sta	0,@acctr		;!!!!label in srel 
	sta	0,cctr2
	lda	2,trow 
	lda	3,brow 
	sub	2,3
	sta	3,@arctr		;!!!!label in srel 
chkct:
	movl#	0,0,szc		;if negative jmp done
	jmp	@done 
	movl#	3,3,szc
	jmp	@done 
  
clcbx:
	lda	0,@.bxptr	;find bxptr
				;!!!!label in srel
	lda	1,@ayinc		;=add(disp)+disp+1+lcol+trow*yinc 
				;!!!!label in srel
	lda	2,trow 
	jsr	@.mult		;ac1:=ac1*ac2+ac0
	lda	3,lcl
	add	3,1
	sta	1,@.bxp		;!!!!label in srel
clcpo:
	lda	0,@.bfp		;find posit
				;!!!!label in srel
	lda	1,olx		;=bfptr+4*lcol+olx-bflx+ 
	lda	2,@.bflx		;bfwd*(bfty-oty+4*trow)
	movzl	3,3
	movzl	3,3
	add	3,0
	add	1,0
	sub	2,0
	lda	1,@.bfty 
	lda	2,oty
	lda	3,trow 
	movzl	3,3
	movzl	3,3
	sub	2,1
	add	3,1
	lda	2,@.bfrx		;bfwd=bfrx-bflx-1 
	lda	3,@.bflx 
	sub	3,2
	sta	2,@abfwd	;!!!!label in srel 
	sta	2,@.widt		;points to width
				;!!!!label in srel
	jmp	.+2

.widt:	width 

	jsr	@.mult
	sta	1,@.pos1		;invisible at sign
				;!!!!label in srel
	sta	1,rpos
	lda	2,@abfwd	;bfwd4=4*bfwd 
				;!!!!label in srel
	movzl	2,2
	movzl	2,2
	sta	2,@abfwd4	;!!!!label in srel

	jmp	tyin		;don't delete this line


lcl:	.-.			;left col to be pasted(0-15)
rcl:	.-.
trow:	.-.			;top row to be pasted(0-15)
brow:	.-.
acctr:	cctr			;col ctr-next row when 0
				;!!!!label in srel
cctr2:	.-.			;copy of cctr at start of row
arctr:	rctr			;row ctr- done when 0
				;!!!!label in srel
.bxp:	bxptr			;!!!!label in srel
.bfp:	bfptr
abfwd:	bfwd			;!!!!label in srel
abfwd4:	bfwd4			;!!!!label in srel
.pos1:	pos1			;!!!!label in srel
rpos:	.-.			;pos at start of current row
n3b:	3

tyin:
	lda	2,n3b		;oty-fty    mod 4
	sub	3,3		;0 if negative 
	lda	0,oty
	lda	1,fty
	sub	1,0
	movzl#	0,0,snc 
	jmp	.+3
	sta	3,@atyinh	;!!!!label in srel
	jmp	.+3
	and	2,0
	sta	0,@atyinh	;!!!!label in srel
lxin:
	lda	0,flx		;flx-olx   mod 4
	lda	1,olx		;0 if negative 
	sub	1,0
	movl#	0,0,snc
	jmp	.+3
	sta	3,@alxinh	;!!!!label in srel
	jmp	.+3
	and	2,0
	sta	0,@alxinh	;!!!!label in srel
rxin:
	lda	0,orx		;orx-frx   mod 4
	lda	1,frx		;0 if negative 
	sub	1,0
	movl#	0,0,snc
	jmp	.+3
	sta	3,@arxinh	;!!!!label in srel
	jmp	.+3
	and	2,0
	sta	0,@arxinh	;!!!!label in srel
byin:
	lda	0,fby		;fby-oby   mod 4
	lda	1,@.oby		;0 if negative 
				;!!!!label in srel
	sub	1,0
	movl#	0,0,snc
	jmp	.+3
	sta	3,@abyinh	;!!!!label in srel
	jmp	.+3
	and	2,0
	sta	0,@abyinh	;!!!!label in srel
clcin:
	lda	3,@zinhi		;zinhi points to inhibit table 
				;!!!!have to go thru srel
	lda	2,@atyinh	;!!!!label in srel
	add	3,2
	lda	0,0,2
	sta	0,@atyinh	;!!!!label in srel
	lda	1,n4b 
	add	1,3
	lda	2,@alxinh	;!!!!label in srel
	add	3,2
	lda	0,0,2
	sta	0,@alxinh	;!!!!label in srel
	add	1,3
	lda	2,@abyinh	;!!!!label in srel
	add	3,2
	lda	0,0,2
	sta	0,@abyinh	;!!!!label in srel
	add	1,3
	lda	2,@arxinh	;!!!!label in srel
	add	3,2
	lda	0,0,2
	sta	0,@arxinh	;!!!!label in srel
	jmp	.1rch

alxinh:	lxinh			;!!!!label in srel
arxinh:	rxinh			;!!!!label in srel
atyinh:	tyinh			;!!!!label in srel
abyinh:	byinh			;!!!!label in srel
zinhi:	ainhb
				;!!!!ainhb:	.inhb in srel
.oby:	oby
				;!!!!label in srel
n4b:	4
inh2:	inhb1			;!!!!inhb1 now in srel

.1rch:
	lda	3,@arctr		;check for single row 
				;!!!!label in srel
	mov	3,3,snr
	jmp	.1row
.1cch:
	lda	0,@acctr		;check for single column
				;!!!!label in srel
	mov	0,0,snr
	jmp	.1col
	lda	1,@atyinh	;!!!!label in srel
	lda	2,@alxinh	;!!!!label in srel
	and	2,1
	sta	1,@inh2		;invisible at signs
				;!!!!label in srel
r1c1:
	jsrii	.clps		;!!!!made jsrii--addressing probs 
	dsz	@acctr 
				;!!!!label in srel
	jmp	.+2
	jmp	lcol 
	lda	1,@atyinh	;!!!!label in srel
	sta	1,@inh2		;invisible at signs
				;!!!!label in srel
	jmp	ncol 
ncol:
	jsrii	.clps		;!!!!made jsrii--addressing probs 
	dsz	@acctr 
				;!!!!label in srel
 
	jmp	ncol 
	jmp	lcol 
lcol:
	lda	1,@atyinh	;!!!!label in srel 
	lda	2,@arxinh	;!!!!label in srel

	and	2,1
	sta	1,@inh2		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
ndrow:
	lda	0,cctr2
	sta	0,@acctr		;!!!!label in srel
 
	lda	1,@.bxp		;!!!!label in srel
	lda	2,@.yinc		;!!!!label in srel 
	inc	0,0
	add	2,1
	sub	0,1
	sta	1,@.bxp		;!!!!label in srel
	lda	0,rpos 
	lda	1,@abfwd4	;!!!!label in srel
	add	1,0
	sta	0,rpos 
	sta	0,@.pos1		;!!!!label in srel
	dsz	@arctr		;!!!!label at srel 
	jmp	nrow 
	jmp	lrow 
nrow:
	lda	0,@alxinh	;!!!!label at srel 
	sta	0,@inh2		;!!!!label at srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	dsz	@.cctr		;!!!!label in srel 
	jmp	.+2
	jmp	lcol2
	sub	0,0		;same as load minus 1
	com	0,0
	sta	0,@inh2		;!!!!label at srel
	jmp	ncol2
ncol2:
	jsrii	.clps		;!!!!made jsrii--addressing probs
	dsz	@.cctr		;!!!!label in srel 
	jmp	ncol2
	jmp	lcol2
lcol2:
	lda	0,@arxinh	;!!!!label at srel
	sta	0,@inh3		;!!!!label at srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	jsr	ndrow
lrow:
	lda	1,@abyinh	;!!!!label in srel 
	lda	2,@alxinh	;!!!!label in srel
	and	2,1
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	dsz	@.cctr		;!!!!label in srel 
	jmp	.+2
	jmp	lcol3
	lda	1,@abyinh	;!!!!label in srel
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
ncol3:
	jsrii	.clps		;!!!!made jsrii--addressing probs
	dsz	@.cctr		;!!!!label in srel 
	jmp	ncol3
	jmp	lcol3

.yinc:	yinc			;!!!!label in srel
.clps:	clp
inh3:	inhb1			;!!!!inhb1 now in srel
.cctr:	cctr			;!!!!label in srel
tinh:	.-.
n4c:	4
.bxp2:	bxptr			;!!!!label in srel

lcol3:
	lda	1,@abyinh	;!!!!label in srel
	lda	2,@arxinh	;!!!!label in srel
	and	2,1
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	jmp	@done 
.1col:
	lda	1,@.lxin		;jump here if only one column
				;!!!!label at srel
	lda	2,@.rxin
	and	2,1
	sta	1,tinh 
	lda	2,@.tyin		;!!!!label in srel
	and	2,1
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
r1:
	jsrii	.clps		;!!!!made jsrii--addressing probs
nd1cl:
	lda	0,@.bxp2	;!!!!label in srel
	lda	1,@.yinc		;!!!!label in srel 
	add	1,0
	sta	0,@.bxp2	;!!!!label in srel
	dsz	@.bxp2		;!!!!label in srel
	jmp	.+1
	lda	0,n4c 
	lda	1,@.pos2		;invisible at sign
				;!!!!label at srel
	lda	2,@.bfw4		;!!!!label at srel
	add	2,1
	sub	0,1
	sta	1,@.pos2		;!!!!label at srel

	dsz	@.rctr		;!!!!label at srel 
	jmp	nrow4
	jmp	lrow4
nrow4:
	lda	1,tinh		;waste of time but made coding easy
 	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	jmp	nd1cl
	dsz	@.rctr		;!!!!label at srel 
	jmp	nrow4
	jmp	lrow4
lrow4:
	lda	1,tinh 
	lda	2,@.byin		;!!!!label in srel
	and	2,1
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	jmp	@done 

.pos2:	pos1			;!!!!label in srel
.bfw4:	bfwd4			;!!!!label at srel
.rctr:	rctr			;!!!!label at srel

.1row:
	lda	0,@.cctr		;jump here if onl one row 
				;!!!!label in srel
	mov	0,0,snr		;check for single column
	jmp	.1cl2
	lda	1,@.tyin		;!!!!label in srel
	lda	2,@.byin		;!!!!label in srel
	and	2,1
	sta	1,tinh 
	lda	2,@.lxin		;!!!!label in srel
	and	2,1
	sta	1,@inh3		;invisible at sign
	jsrii	.clps		;!!!!made jsrii--addressing probs
				;!!!!label in srel
	dsz	@.cctr		;!!!!label in srel 
	jmp	.+2
	jmp	lcol5
	lda	1,tinh 
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
ncol5:
	jsrii	.clps		;!!!!made jsrii--addressing probs
	dsz	@.cctr		;!!!!label in srel 
	jmp	ncol5
	jmp	lcol5
lcol5:
	lda	1,tinh 
	lda	2,@.rxin
	and	2,1
	sta	1,@inh3		;invisible at sign
				;!!!!label in srel
	jsrii	.clps		;!!!!made jsrii--addressing probs
	jmp	@done 

.tyin:	tyinh			;!!!!label in srel
.byin:	byinh			;!!!!label in srel
.lxin:	lxinh			;!!!!label in srel
.rxin:	rxinh			;!!!!label in srel
.bfw:	bfwd			;!!!!label in srel
.1cl2:
	lda	1,@.rxin		;jump here if single column
				;!!!!label in srel
	lda	2,@.lxin		;!!!!label in srel
	and	2,1
	lda	2,@.byin		;!!!!label in srel
	lda	3,@.tyin		;!!!!label in srel
	and	3,2
	and	2,1
	sta	1,@inh3		;invisible at sign
	jsrii	.clps		;!!!!made jsrii--addressing probs
				;!!!!label in srel
	jmp	@done 


	.rdx	2 
.inhb:
		1111111111111111 
		0000111111111111
		0000000011111111
		0000000000001111
		1111111111111111
		0111011101110111
		0011001100110011
		0001000100010001
		1111111111111111
		1111111111110000
		1111111100000000
		1111000000000000
		1111111111111111
		1110111011101110
		1100110011001100
		1000100010001000

	.rdx	8
;kbx:				;!!!!TABLE BUILT IN BLDBLKTAB BELOW
				;!!!!NO PTRS TO CODE IN CODE
;	wbx			;not supposed to happen
;	bbx			;code 1=black
;	wbx			;code 2=white
;	g1bx			;code 3-8=grey
;	g2bx
;	g3bx
;	g4bx
;	g5bx
;	g6bx
;	ascbx			;asci box
;	ascbx			;asci box
;	wbx			;should have been trapped
				;by transp check
				;anything past here should be asci but
				;has been kluged to transparent 

kbx:
adwbx1:		0		;!!!!wbx
				;not supposed to happen
adbbx:		0		;!!!!bbx
				;code 1=black
adwbx2:		0		;!!!!wbx
				;code 2=white
adg1bx:		0		;!!!!g1bx
				;code 3-8=grey
adg2bx:		0		;!!!!g2bx
adg3bx:		0		;!!!!g3bx
adg4bx:		0		;!!!!g4bx
adg5bx:		0		;!!!!g5bx
adg6bx:		0		;!!!!g6bx
adascbx1:	0		;!!!!ascbx
				;asci box
adascbx2:	0		;!!!!ascbx
				;asci box
adwbx3:		0		;!!!!wbx
				;should have been trapped
				;by transp check
				;anything past here should be asci but
				;has been kluged to transparent 

		.rdx	2

bbx:
	0001000100010001
	0001000100010001
	0001000100010001
	0001000100010001
wbx:
	0010001000100010
	0010001000100010
	0010001000100010
	0010001000100010
g1bx:				;these will someday be different greys
g2bx:				;but right now they all point to the 
g3bx:				;same core location
g4bx:
g5bx:
g6bx:
	0011001100110011
	0011001100110011
	0011001100110011
	0011001100110011
ascbx:
	0001001000010010
	0010000100100001
	0001001000010010
	0010000100100001

		.rdx	8

bldret:	0
temp0:	0

fixpastetabsc:			;!!!!subr for making kbx table
				;!!!!of addresses 
	sta 3,bldret		;!!!!save return
	sta 0,temp0		;!!!!save ac0--pnt bombs
	jsr @.pnt		;!!!!do a bunch of pnts to build table
	wbx-.
	sta 0,adwbx1
	sta 0,adwbx2
	sta 0,adwbx3
	jsr @.pnt
	bbx-.
	sta 0,adbbx
	jsr @.pnt
	g1bx-.
	sta 0,adg1bx
	jsr @.pnt
	g2bx-.
	sta 0,adg2bx
	jsr @.pnt
	g3bx-.
	sta 0,adg3bx
	jsr @.pnt
	g4bx-.
	sta 0,adg4bx
	jsr @.pnt
	g5bx-.
	sta 0,adg5bx
	jsr @.pnt
	g6bx-.
	sta 0,adg6bx
	jsr @.pnt
	ascbx-.
	sta 0,adascbx1
	sta 0,adascbx2
	lda 0,temp0		;!!!!get ac0 back
	jmp @bldret


	.end
